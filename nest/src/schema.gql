# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""category"""
type CategoryModel {
  id: ID!
  name: String!
  title: String!
}

"""categoryInput"""
input CategoryModelInput {
  name: String!
  title: String!
}

"""comment"""
type CommentModel {
  author: String!
  date: DateTime!
  description: String
  id: ID!
}

"""commentInput"""
input CommentModelInput {
  author: String!
  date: DateTime!
  description: String
}

"""course """
type CourseModel {
  category: CategoryModel
  comments: [CommentModel!]
  description: String
  difficulty: DifficultyModel
  id: ID!
  lessons: [LessonModel!]
  rating: [Float!]
  title: String!
}

"""courseInput """
input CourseModelInput {
  category: CategoryModelInput
  comments: [CommentModelInput!]
  description: String
  difficulty: DifficultyModelInput
  lessons: [LessonModelInput!]
  rating: [Float!]
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""difficulty"""
type DifficultyModel {
  id: ID!
  name: String!
  title: String!
}

"""difficultyInput"""
input DifficultyModelInput {
  name: String!
  title: String!
}

"""lessons"""
type LessonModel {
  attached: [String!]
  description: String
  id: ID!
  title: String!
  video: String
}

"""lessonsInput"""
input LessonModelInput {
  attached: [String!]
  description: String
  title: String!
  video: String
}

type Mutation {
  addCourse(form: CourseModelInput!, userId: String!): CourseModel!
  login(form: UserModelInput!): TokenModel!
  logout(form: UserModelInput!): UserModel!
  register(form: UserModelInput!): UserModel!
  removeCourse(id: String!): CourseModel!
  token(form: UserModelInput!): TokenModel!
  updateCommentCourse(form: CommentModelInput!, id: String!): CourseModel!
  updateCourse(form: CourseModelInput!, id: String!): CourseModel!
  updateRatingCourse(form: RatingModelInput!, id: String!): CourseModel!
  updateUser(form: UserModelInput!, id: String!): UserModel!
  updateUserAvailableCourses(courseId: String!, id: String!): UserModel!
}

type Query {
  course(id: String!): CourseModel!
  courses: [CourseModel!]!
  user(id: String!): UserModel!
  users: [UserModel!]!
}

"""ratingInput"""
input RatingModelInput {
  rating: Float!
}

"""roles"""
type RolesModel {
  id: ID!
  name: String!
  title: String!
}

"""rolesInput"""
input RolesModelInput {
  name: String!
  title: String!
}

"""token"""
type TokenModel {
  access_token: String!
}

"""user"""
type UserModel {
  availableCourses: [String!]
  id: ID!
  login: String!
  ownCourses: [String!]
  roles: [RolesModel!]
}

"""userInput"""
input UserModelInput {
  availableCourses: [String!]
  login: String!
  ownCourses: [String!]
  password: String!
  refreshToken: String
  roles: [RolesModelInput!]
}